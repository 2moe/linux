#!/usr/bin/env bash
####################
remove_browser() {
    if (whiptail --title "ËØ∑‰ªé‰∏§‰∏™Â∞èÂèØÁà±‰∏≠ÈáåÈÄâÊã©‰∏Ä‰∏™ " --yes-button "Firefox" --no-button "chromium" --yesno 'ÁÅ´ÁãêÂ®ò:‚ÄúËôΩÁÑ∂Áü•ÈÅìÊÄªÊúâÁ¶ªÂà´Êó∂Ôºå‰ΩÜÊàëÊ≤°ÊÉ≥Âà∞Ëøô‰∏ÄÂ§©Á´üÁÑ∂‰ºöËøô‰πàÊó©„ÄÇËôΩÁÑ∂Âæà‰∏çËàçÔºå‰ΩÜËøòÊòØÂæàÊÑüÊøÄÊÇ®ÊõæÈÄâÊã©‰∫ÜÊàë„ÄÇÂ∏åÊúõÊàë‰ª¨‰∏ãÊ¨°Ëøò‰ºöÂÜçÁõ∏ÈÅáÔºåÂëúÂëú...(;¬¥‡ºé‡∫∂–î‡ºé‡∫∂`)‚ÄùchromiumÂ®òÔºö‚ÄúÂìº(Ôø¢Ô∏øÃ´ÃøÔø¢‚òÜ)ÔºåË¥üÂøÉ‰∫∫ÔºåËµ∞‰∫Ü‰πãÂêéÂ∞±Âà´ÂõûÊù•‰∫ÜÔºÅo(T„ÉòTo) „ÄÇ‚Äù  ‚ú®ËØ∑ÂÅöÂá∫ÊÇ®ÁöÑÈÄâÊã©ÔºÅ' 10 60); then
        echo 'ÂëúÂëú...Êàë...ÊàëÊâç...Êâç‰∏ç‰ºö‰∏∫‰∫ÜËøôÁÇπÂ∞è‰∫ãËÄåÊµÅÊ≥™Âë¢ÔºÅ„ÉΩ(*„ÄÇ>–î<)o„Çú'
        echo "${YELLOW}ÊåâÂõûËΩ¶ÈîÆÁ°ÆËÆ§Âç∏ËΩΩfirefox${RESET}"
        echo 'Press enter to remove firefox,press Ctrl + C to cancel'
        RETURN_TO_WHERE='tmoe_linux_tool_menu'
        do_you_want_to_continue
        ${TMOE_REMOVAL_COMMAND} firefox-esr firefox-esr-l10n-zh-cn
        ${TMOE_REMOVAL_COMMAND} firefox firefox-l10n-zh-cn
        ${TMOE_REMOVAL_COMMAND} firefox-locale-zh-hans
        apt autopurge 2>/dev/null
        emerge -C firefox-bin firefox 2>/dev/null

    else
        echo 'Â∞èÂ£∞ÂòÄÂíïÔºö‚ÄúÂ¶æË∫´‰∏çÂú®ÁöÑÊó∂ÂÄôÔºå‰Ω†‰∏ÄÂÆöË¶ÅÂ•ΩÂ•ΩÁÖßÈ°æÂ•ΩËá™Â∑±„ÄÇ‚Äù '
        echo "${YELLOW}ÊåâÂõûËΩ¶ÈîÆÁ°ÆËÆ§Âç∏ËΩΩchromium${RESET}"
        echo 'Press enter to confirm uninstall chromium,press Ctrl + C to cancel'
        RETURN_TO_WHERE='tmoe_linux_tool_menu'
        do_you_want_to_continue
        ${TMOE_REMOVAL_COMMAND} chromium chromium-l10n
        apt-mark unhold chromium-browser chromium-browser-l10n chromium-codecs-ffmpeg-extra
        ${TMOE_REMOVAL_COMMAND} chromium-browser chromium-browser-l10n
        apt autopurge
        dnf remove -y chromium 2>/dev/null
        pacman -Rsc chromium 2>/dev/null
        emerge -C chromium 2>/dev/null

    fi
    tmoe_linux_tool_menu
}
############################################
software_center() {
    RETURN_TO_WHERE='software_center'
    SOFTWARE=$(
        whiptail --title "Software center-01" --menu \
            "ÊÇ®ÊÉ≥Ë¶ÅÂÆâË£ÖÂì™‰∏™ËΩØ‰ª∂Ôºü\n Which software do you want to install?" 0 50 0 \
            "1" "ü¶ä Browser:ÊµèËßàÂô®(firefox,chromium)" \
            "2" "üè§ debian-opt:qqÈü≥‰πê,‰∫ëÈü≥‰πê(ÊîØÊåÅarchÂíåfedora)" \
            "3" "üéµ Multimedia:ÂõæÂÉè‰∏éÂΩ±Èü≥(ËÖæËÆØËßÜÈ¢ë,gimp,mpv)" \
            "4" "üìò Dev:ÂºÄÂèë(VScode,Pycharm,Android-Studio,idea)" \
            "5" "üìö Documents:ÊñáÊ°£(libreoffice,wps)" \
            "6" "üîØ Packages&system:ËΩØ‰ª∂ÂåÖ‰∏éÁ≥ªÁªüÁÆ°ÁêÜ" \
            "7" "üéÆ Games:Ê∏∏Êàè(steam,wesnoth)" \
            "8" "üêß SNS:Á§æ‰∫§Á±ª(qq)" \
            "9" "üéÅ Download:‰∏ãËΩΩÁ±ª(aria2,baidu)" \
            "10" "ü•ô Start zsh tool:ÂêØÂä®zshÁÆ°ÁêÜÂ∑•ÂÖ∑" \
            "11" "ü•ó File shared:Êñá‰ª∂ÂÖ±‰∫´‰∏éÁΩëÁõò(Webdav)" \
            "12" "üíî remove:Âç∏ËΩΩÁÆ°ÁêÜ" \
            "0" "üåö Back to the main menu ËøîÂõû‰∏ªËèúÂçï" \
            3>&1 1>&2 2>&3
    )
    #(Â∑≤ÁßªÈô§)"12" "Tasksel:ËΩªÊùæ,Âø´ÈÄüÂú∞ÂÆâË£ÖÁªÑËΩØ‰ª∂" \
    case "${SOFTWARE}" in
    0 | "") tmoe_linux_tool_menu ;;
    1) install_browser ;;
    2) explore_debian_opt_repo ;;
    3) tmoe_multimedia_menu ;;
    4) dev_menu ;;
    5) tmoe_documents_menu ;;
    6) tmoe_software_package_menu ;;
    7) tmoe_games_menu ;;
    8) tmoe_social_network_service ;;
    9) tmoe_download_class ;;
    10) start_tmoe_zsh_manager ;;
    11) personal_netdisk ;;
    12) tmoe_other_options_menu ;;
    esac
    ############################################
    press_enter_to_return
    software_center
}
###########
dev_menu() {
    source ${TMOE_TOOL_DIR}/code/dev-menu
}
###########
start_tmoe_zsh_manager() {
    TMOE_ZSH_SCRIPT="${HOME}/.config/tmoe-zsh/git/zsh.sh"
    if [ -e /usr/local/bin/zsh-i ]; then
        bash /usr/local/bin/zsh-i
    elif [ -e "${TMOE_ZSH_SCRIPT}" ]; then
        bash ${TMOE_ZSH_SCRIPT}
    else
        bash -c "$(curl -LfsS 'https://raw.githubusercontent.com/2moe/tmoe-zsh/master/zsh.sh')"
    fi
}
##########
tmoe_software_package_menu() {
    RETURN_TO_WHERE='tmoe_software_package_menu'
    NON_DEBIAN='false'
    DEPENDENCY_01=""
    TMOE_APP=$(
        whiptail --title "PACKAGES MANAGER" --menu \
            "How do you want to manage software package?" 0 50 0 \
            "1" "deb-batch-installer:ËΩØ‰ª∂ÂåÖÊâπÈáèÂÆâË£ÖÂô®" \
            "2" "Synaptic(Êñ∞Á´ãÂæóËΩØ‰ª∂ÂåÖÁÆ°ÁêÜÂô®)" \
            "3" "ADB(Android Debug Bridge,Áî®‰∫éË∞ÉËØïÂÆâÂçì)" \
            "4" "BleachBit(ÂûÉÂúæÊ∏ÖÁêÜ)" \
            "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
            3>&1 1>&2 2>&3
    )
    ##########################
    case "${TMOE_APP}" in
    0 | "") software_center ;;
    1) tmoe_deb_batch_installer ;;
    2) install_package_manager_gui ;;
    3) install_android_debug_bridge ;;
    4) install_bleachbit_cleaner ;;
    esac
    ##########################
    press_enter_to_return
    tmoe_software_package_menu
}
#############
tmoe_deb_batch_installer() {
    source ${TMOE_TOOL_DIR}/sources/deb-installer
}
############
tmoe_social_network_service() {
    RETURN_TO_WHERE='tmoe_social_network_service'
    NON_DEBIAN='false'
    DEPENDENCY_01=""
    TMOE_APP=$(
        whiptail --title "SNS" --menu \
            "Which software do you want to install?" 0 50 0 \
            "1" "LinuxQQ(Âú®Á∫øËÅäÂ§©ËΩØ‰ª∂)" \
            "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
            3>&1 1>&2 2>&3
    )
    ##########################
    case "${TMOE_APP}" in
    0 | "") software_center ;;
    1) install_linux_qq ;;
    esac
    ##########################
    press_enter_to_return
    tmoe_social_network_service
}
###################
tmoe_download_class() {
    RETURN_TO_WHERE='tmoe_download_class'
    NON_DEBIAN='false'
    DEPENDENCY_01=""
    TMOE_APP=$(
        whiptail --title "documents" --menu \
            "Which software do you want to install?" 0 50 0 \
            "1" "üç® aria2(linuxÂπ≥Âè∞Ë∂ÖÂº∫Êñá‰ª∂‰∏ãËΩΩÂô®)" \
            "2" "üñº work_crawler:Êº´Áï´„ÄÅÂ∞èË™¨‰∏ãËºâÂ∑•ÂÖ∑@kanasimi" \
            "3" "üìâ ÁôæÂ∫¶ÁΩëÁõò(x64,Êèê‰æõÊñá‰ª∂ÁöÑÁΩëÁªúÂ§á‰ªΩ,ÂêåÊ≠•ÂíåÂàÜ‰∫´ÊúçÂä°)" \
            "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
            3>&1 1>&2 2>&3
    )
    ##########################
    case "${TMOE_APP}" in
    0 | "") software_center ;;
    1) tmoe_aria2_manager ;;
    2) start_kanasimi_work_crawler ;;
    3) install_baidu_netdisk ;;
    esac
    ##########################
    press_enter_to_return
    tmoe_download_class
}
####################
start_kanasimi_work_crawler() {
    RETURN_TO_WHERE='check_kanasimi_work_crawler'
    install_nodejs
    check_kanasimi_work_crawler
}
###############
install_nodejs() {
    NON_DEBIAN='false'
    DEPENDENCY_01=""
    DEPENDENCY_02=""
    if [ ! $(command -v 7za) ]; then
        if [ "${LINUX_DISTRO}" = "debian" ]; then
            DEPENDENCY_01="p7zip-full"
        else
            DEPENDENCY_01="p7zip"
        fi
    fi
    if [ ! $(command -v node) ]; then
        DEPENDENCY_02="nodejs"
    fi
    if [ ! -z "${DEPENDENCY_01}" ] || [ ! -z "${DEPENDENCY_02}" ]; then
        beta_features_quick_install
    fi

    if [ ! $(command -v npm) ]; then
        bash -c "$(curl -Lv https://npmjs.org/install.sh | sed 's@registry.npmjs.org@registry.npm.taobao.org@g')"
        if [ ! $(command -v npm) ]; then
            ${TMOE_INSTALLATON_COMMAND} npm
        fi
        cat <<-'EOF'
			npm config set registry https://registry.npm.taobao.org
			npm config set disturl https://npm.taobao.org/dist
			npm config set electron_mirror https://npm.taobao.org/mirrors/electron/
		EOF
        echo "${YELLOW}ÊòØÂê¶ÈúÄË¶ÅÂ∞ÜnpmÂÆòÊñπÊ∫êÊõ¥Êç¢‰∏∫Ê∑òÂÆùÊ∫ê[Y/n]${RESET} "
        echo "Êõ¥Êç¢ÂêéÂèØ‰ª•Âä†Âø´ÂõΩÂÜÖÁöÑ‰∏ãËΩΩÈÄüÂ∫¶,${YELLOW}ÊåâÂõûËΩ¶ÈîÆÁ°ÆËÆ§ÔºåËæìnÊãíÁªù„ÄÇ${RESET}"
        echo "If you are not living in the People's Republic of China, then please type ${YELLOW}n${RESET} .[Y/n]"
        do_you_want_to_continue
        npm config set registry https://registry.npm.taobao.org
        npm config set disturl https://npm.taobao.org/dist
        npm config set electron_mirror https://npm.taobao.org/mirrors/electron/
    fi
}
############
check_kanasimi_work_crawler() {
    #if [ ! -h "/usr/local/bin/work-i" ]; then
    #    rm /usr/local/bin/work-i
    #    ln -sf "${TMOE_TOOL_DIR}/downloader/work_crawler@kanasimi.sh" /usr/local/bin/work-i
    #fi
    #Ê≠§Â§Ñ‰∏∫bashËÄåÈùûsource
    bash "${TMOE_TOOL_DIR}/downloader/work_crawler@kanasimi.sh"
}
####################
tmoe_documents_menu() {
    RETURN_TO_WHERE='tmoe_documents_menu'
    NON_DEBIAN='false'
    DEPENDENCY_01=""
    TMOE_APP=$(
        whiptail --title "documents" --menu \
            "Which software do you want to install?" 0 50 0 \
            "1" "LibreOffice(ÂºÄÊ∫ê„ÄÅËá™Áî±ÁöÑÂäûÂÖ¨ÊñáÊ°£ËΩØ‰ª∂)" \
            "2" "WPS office(ÂäûÂÖ¨ËΩØ‰ª∂)" \
            "3" "GNU Emacs(ËëóÂêçÁöÑÈõÜÊàêÂºÄÂèëÁéØÂ¢ÉÂíåÊñáÊú¨ÁºñËæëÂô®)" \
            "4" "Chinese manual(‰∏≠ÊñáÊâãÂÜå)" \
            "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
            3>&1 1>&2 2>&3
    )
    ##########################
    case "${TMOE_APP}" in
    0 | "") software_center ;;
    1) install_libre_office ;;
    2) install_wps_office ;;
    3) install_emacs ;;
    4) install_chinese_manpages ;;
    esac
    ##########################
    press_enter_to_return
    tmoe_documents_menu
}
####################
install_emacs() {
    DEPENDENCY_02="emacs"
    beta_features_quick_install
}
#############
install_clementine() {
    DEPENDENCY_02="clementine"
    beta_features_quick_install
}
##########
batch_compression_of_pictures() {
    source ${TMOE_TOOL_DIR}/optimization/compress_pictures
}
############
tmoe_multimedia_menu() {
    RETURN_TO_WHERE='tmoe_multimedia_menu'
    NON_DEBIAN='false'
    DEPENDENCY_01=""
    TMOE_APP=$(whiptail --title "Picture&Video&Music" --menu \
        "Which software do you want to install?" 0 50 0 \
        "1" "üóúÔ∏è Batch compression of picsÊâπÈáèÂéãÁº©ÂõæÁâá" \
        "2" "üìΩÔ∏è MPV(ÂºÄÊ∫ê„ÄÅË∑®Âπ≥Âè∞ÁöÑÈü≥ËßÜÈ¢ëÊí≠ÊîæÂô®)" \
        "3" "üé¨ ËÖæËÆØËßÜÈ¢ë:ÂõΩ‰∫ßLinuxÂú®Á∫øËßÜÈ¢ëËΩØ‰ª∂" \
        "4" "üñº GIMP(GNU ÂõæÂÉèÂ§ÑÁêÜÁ®ãÂ∫è)" \
        "5" "üçä Clementine(Â∞èÊüëÊ©òÈü≥‰πêÊí≠ÊîæÂô®)" \
        "6" "üéûÔ∏è Parole(xfceÈªòËÆ§Â™í‰ΩìÊí≠ÊîæÂô®,È£éÊ†ºÁÆÄÊ¥Å)" \
        "7" "üéß ÁΩëÊòì‰∫ëÈü≥‰πê(x86_64,‰∏ìÊ≥®‰∫éÂèëÁé∞‰∏éÂàÜ‰∫´ÁöÑÈü≥‰πê‰∫ßÂìÅ)" \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##########################
    case "${TMOE_APP}" in
    0 | "") software_center ;;
    1) batch_compression_of_pictures ;;
    2) install_mpv ;;
    3) install_tencent_video ;;
    4) install_gimp ;;
    5) install_clementine ;;
    6) install_parole ;;
    7) install_netease_163_cloud_music ;;
    esac
    ##########################
    press_enter_to_return
    tmoe_multimedia_menu
}
#############
install_tencent_video() {
    echo "Êú¨Êñá‰ª∂ÊèêÂèñËá™ÂÆòÊñπv1.0.10_amd64.deb,ÂºÄÂèëËÄÖÂàÜÁ¶ª‰∫Üamd64ÁöÑelectronÁéØÂ¢ÉÂπ∂ÂØπÂÖ∂ËøõË°åÈáçÊñ∞ÊâìÂåÖ,‰ª•ÈÄÇÂ∫îarm64Êû∂ÊûÑ„ÄÇ"
    echo "Êú¨ÁâàÊú¨‰ªÖÈÄÇÈÖçdebÁ≥ªÂíåarchÁ≥ªÂèëË°åÁâàÔºåÁ∫¢Â∏ΩÁ≥ªÁî®Êà∑ËØ∑Ëá™Ë°åÊµãËØï„ÄÇ"
    echo "Ëã•ÂÆâË£ÖÂ§±Ë¥•ÔºåÂàôËØ∑ÊâãÂä®ÂâçÂæÄÂÆòÁΩë‰∏ãËΩΩÂÆâË£Ö"
    echo "URL: ${YELLOW}https://v.qq.com/download.html#Linux${RESET}"
    tenvideo_env
    check_electron
    git_clone_tenvideo
}
#############
git_clone_tenvideo() {
    cd /tmp
    rm -rv ${TENVIDEO_FOLDER} 2>/dev/null
    git clone --depth=1 ${TENVIDEO_GIT} ${TENVIDEO_FOLDER}
    tar -PpJxvf ${TENVIDEO_FOLDER}/app.tar.xz
    rm -rv ${TENVIDEO_FOLDER}
    echo "ÂÆâË£ÖÂÆåÊàêÔºåÂ¶ÇÈúÄÂç∏ËΩΩÔºåËØ∑ÊâãÂä®Ëæì${RED}rm -rv${RESET} ${BLUE}${TENTVIDEO_OPT} ${TENVIDEO_LNK}${RESET}"
}
############
tmoe_games_menu() {
    RETURN_TO_WHERE='tmoe_games_menu'
    NON_DEBIAN='false'
    DEPENDENCY_01=""
    TMOE_APP=$(whiptail --title "GAMES" --menu \
        "Which game do you want to install?" 0 50 0 \
        "1" "install Steam-x86_64(ÂÆâË£ÖËí∏Ê±ΩÊ∏∏ÊàèÂπ≥Âè∞)" \
        "2" "remove Steam(Âç∏ËΩΩ)" \
        "3" "cataclysmÂ§ßÁÅæÂèò-Âä´Âêé‰ΩôÁîü(Êú´Êó•ÂπªÊÉ≥ËÉåÊôØÁöÑÊé¢Á¥¢ÁîüÂ≠òÊ∏∏Êàè)" \
        "4" "mayomonogatariÊñØÈöÜ‰∏éÈ©¨ÂÖãË¥ùÂ∞îÁöÑË∞ú‰πãÁâ©ËØ≠(ndsËß£Ë∞úÊ∏∏Êàè)" \
        "5" "wesnothÈü¶ËØ∫‰πãÊàò(Â•áÂπªËÉåÊôØÁöÑÂõûÂêàÂà∂Á≠ñÁï•ÊàòÊ£ãÊ∏∏Êàè)" \
        "6" "SuperTuxKart(3DÂç°‰∏ÅËΩ¶)" \
        "7" "retroarch(ÂÖ®ËÉΩÂ§çÂè§Ê∏∏ÊàèÊ®°ÊãüÂô®)" \
        "8" "dolphin-emu(‰ªªÂ§©Â†ÇwiiÊ®°ÊãüÂô®)" \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##########################
    case "${TMOE_APP}" in
    0 | "") software_center ;;
    1) install_steam_app ;;
    2) remove_steam_app ;;
    3) install_game_cataclysm ;;
    4) install_nds_game_mayomonogatari ;;
    5) install_wesnoth_game ;;
    6) install_supertuxkart_game ;;
    7) install_retroarch ;;
    8) install_dolphin-emu ;;
    esac
    ##########################
    press_enter_to_return
    tmoe_games_menu
}
#############
install_retroarch() {
    DEPENDENCY_01='retroarch'
    if [ "${LINUX_DISTRO}" = "debian" ]; then
        DEPENDENCY_02='^libretro'
    elif [ "${LINUX_DISTRO}" = "arch" ]; then
        DEPENDENCY_02='retroarch-assets-xmb'
    else
        DEPENDENCY_02=''
    fi
    beta_features_quick_install
}
############
install_dolphin-emu() {
    DEPENDENCY_01='dolphin-emu'
    DEPENDENCY_02='dolphin-emu-git'
    if [ "${LINUX_DISTRO}" = "debian" ]; then
        DEPENDENCY_02=''
    fi
    beta_features_quick_install
}
################
remove_debian_steam_app() {
    if [ "${ARCH_TYPE}" != "i386" ]; then
        echo 'dpkg  --remove-architecture i386'
        echo 'Ê≠£Âú®ÁßªÈô§ÂØπi386ËΩØ‰ª∂ÂåÖÁöÑÊîØÊåÅ'
        #apt purge ".*:i386"
        aptitude remove ~i~ri386
        dpkg --remove-architecture i386
        apt update
    fi
}
###############
remove_steam_app() {
    echo "${TMOE_REMOVAL_COMMAND} steam-launcher steam"
    ${TMOE_REMOVAL_COMMAND} steam-launcher steam
    if [ "${LINUX_DISTRO}" = "debian" ]; then
        remove_debian_steam_app
    elif [ "${LINUX_DISTRO}" = "redhat" ]; then
        #remove_fedora_steam_app
        rm -fv /etc/yum.repos.d/steam.repo
    elif [ "${LINUX_DISTRO}" = "arch" ]; then
        remove_arch_steam_app
    fi
}
###############
install_debian_steam_app() {
    LATEST_DEB_REPO='https://mirrors.tuna.tsinghua.edu.cn/steamos/steam/pool/steam/s/steam/'
    GREP_NAME='steam-launcher'
    cd /tmp
    download_tuna_repo_deb_file_all_arch
    dpkg --add-architecture i386
    apt update
    apt install ./${LATEST_DEB_VERSION}
    rm -fv ./${LATEST_DEB_VERSION}
    beta_features_install_completed
}
#################
install_fedora_steam_app() {
    cat >/etc/yum.repos.d/steam.repo <<-'ENDOFFEDORASTEAM'
		[steam]
		name=Steam RPM packages (and dependencies) for Fedora
		baseurl=http://spot.fedorapeople.org/steam/fedora-$releasever/
		enabled=1
		skip_if_unavailable=1
		gpgcheck=0
	ENDOFFEDORASTEAM
}
####################
check_arch_multi_lib_line() {
    cd /etc
    ARCH_MULTI_LIB_LINE=$(cat pacman.conf | grep '\[multilib\]' -n | cut -d ':' -f 1 | tail -n 1)
    ARCH_MULTI_LIB_INCLUDE_LINE=$((${ARCH_MULTI_LIB_LINE} + 1))
}
#################
install_arch_steam_app() {
    check_arch_multi_lib_line
    echo "Ê≠£Âú®‰øÆÊîπ/etc/pacman.conf‰∏≠Á¨¨${ARCH_MULTI_LIB_LINE}Ë°å‰∏≠ÁöÑmultilib"
    sed -i "${ARCH_MULTI_LIB_LINE}c\[multilib]" pacman.conf
    sed -i "${ARCH_MULTI_LIB_INCLUDE_LINE}c\Include = /etc/pacman.d/mirrorlist" pacman.conf
}
#################
remove_arch_steam_app() {
    check_arch_multi_lib_line
    echo "Ê≠£Âú®Ê≥®ÈáäÊéâ/etc/pacman.conf‰∏≠Á¨¨${ARCH_MULTI_LIB_LINE}Ë°å‰∏≠ÁöÑmultilib"
    sed -i "${ARCH_MULTI_LIB_LINE}c\#[multilib]" pacman.conf
    sed -i "${ARCH_MULTI_LIB_INCLUDE_LINE}c\#Include = /etc/pacman.d/mirrorlist" pacman.conf
}
################
install_steam_app() {
    case "${ARCH_TYPE}" in
    amd64 | i386) ;;
    *)
        echo "${RED}WARNINGÔºÅ${RESET}Ê£ÄÊµãÂà∞ÊÇ®‰ΩøÁî®ÁöÑÊòØ${BLUE}${ARCH_TYPE}${RESET}Êû∂ÊûÑÔºåËØ∑ÂãøÂú®ËØ•Êû∂ÊûÑ‰∏äÂÆâË£Östeam"
        echo "Do not install steam on this architecture."
        echo "ÊòØÂê¶ÈúÄË¶ÅÁªßÁª≠ÂÆâË£ÖÔºü"
        do_you_want_to_continue
        ;;
    esac
    DEPENDENCY_01='steam-launcher'
    DEPENDENCY_02="steam"
    if [ "${LINUX_DISTRO}" = "debian" ]; then
        install_debian_steam_app
    elif [ "${LINUX_DISTRO}" = "redhat" ]; then
        install_fedora_steam_app
        beta_features_quick_install
    elif [ "${LINUX_DISTRO}" = "arch" ]; then
        DEPENDENCY_01='steam-native-runtime'
        install_arch_steam_app
        #Ê≠§Â§ÑÈúÄË¶ÅÈÄâÊã©ÊòæÂç°È©±Âä®ÔºåÊïÖ‰∏çË¶Å‰ΩøÁî®quick_install_function
        echo "pacman -Syu ${DEPENDENCY_01} ${DEPENDENCY_02}"
        pacman -Syu ${DEPENDENCY_01} ${DEPENDENCY_02}
    else
        beta_features_quick_install
    fi
}
####################
install_supertuxkart_game() {
    DEPENDENCY_02="supertuxkart"
    beta_features_quick_install
}
###################
install_wesnoth_game() {
    DEPENDENCY_01="wesnoth"
    DEPENDENCY_02=""
    NON_DEBIAN='false'
    beta_features_quick_install
}
###########
install_mpv() {
    if [ "${LINUX_DISTRO}" = "redhat" ]; then
        DEPENDENCY_01="kmplayer"
    else
        DEPENDENCY_01="mpv"
    fi
    DEPENDENCY_02=""
    NON_DEBIAN='false'
    beta_features_quick_install
}
#############
install_linux_qq() {
    ICON_FILE='/usr/local/share/tencent-qq/qq.png'
    cat_icon_img
    DEPENDENCY_01="linuxqq"
    DEPENDENCY_02=""
    echo "Ê≠£Âú®Ê£ÄÊµãÁâàÊú¨Êõ¥Êñ∞..."
    echo "Ëã•ÂÆâË£ÖÂ§±Ë¥•ÔºåÂàôËØ∑ÂâçÂæÄÂÆòÁΩëÊâãÂä®‰∏ãËΩΩÂÆâË£Ö„ÄÇ"
    echo "url: ${YELLOW}https://im.qq.com/linuxqq/download.html${RESET}"
    THE_LATEST_PACMAN_URL=$(curl -L https://aur.tuna.tsinghua.edu.cn/packages/linuxqq/ | grep x86_64 | grep qq | head -n 1 | cut -d '=' -f 2 | cut -d '"' -f 2)
    THE_LATEST_DEB_VERSION=$(echo ${THE_LATEST_PACMAN_URL} | awk -F '/' '{print $NF}' | sed 's@_x86_64.pkg.*$@@')
    case ${THE_LATEST_DEB_VERSION} in
    linuxqq_2.0.0-b2-1082)
        THE_LATEST_DEB_VERSION='linuxqq_2.0.0-b2-1084'
        THE_LATEST_PACMAN_URL="http://down.qq.com/qqweb/LinuxQQ/linuxqq_2.0.0-b2-1084_x86_64.pkg.tar.xz"
        ;;
    esac

    THE_LATEST_DEB_URL=$(echo ${THE_LATEST_PACMAN_URL} | sed "s@x86_64.pkg.*@${ARCH_TYPE}.deb@")
    case ${ARCH_TYPE} in
    amd64) TMP_ARCH_TYPE=x86_64 ;;
    arm64) TMP_ARCH_TYPE=arm64 ;;
    mips*) TMP_ARCH_TYPE=mips64el ;;
    esac

    THE_LATEST_SH_URL=$(echo ${THE_LATEST_PACMAN_URL} | sed "s@x86_64.pkg.*@${TMP_ARCH_TYPE}.sh@")
    #ÈáçÂ§çÊ£ÄÊµãÁâàÊú¨Âè∑
    THE_LATEST_DEB_VERSION=$(echo ${THE_LATEST_PACMAN_URL} | awk -F '/' '{print $NF}' | sed 's@_x86_64.pkg.*$@@')

    TMOE_TIPS_01="Ê£ÄÊµãÂà∞ÊúÄÊñ∞ÁâàÊú¨‰∏∫${THE_LATEST_DEB_VERSION}"
    lolcat_tmoe_tips_01

    case ${LINUX_DISTRO} in
    debian) echo "ÊúÄÊñ∞ÁâàÈìæÊé•‰∏∫${BLUE}${THE_LATEST_DEB_URL}${RESET}" ;;
    *) echo "ÊúÄÊñ∞ÁâàÈìæÊé•‰∏∫${BLUE}${THE_LATEST_SH_URL}${RESET}" ;;
    esac

    if [ ! -e "${APPS_LNK_DIR}/qq.desktop" ]; then
        echo "Êú™Ê£ÄÊµãÂà∞Êú¨Âú∞ÁâàÊú¨ÔºåÊÇ®ÂèØËÉΩÂ∞öÊú™ÂÆâË£ÖËÖæËÆØQQ linuxÁâàÂÆ¢Êà∑Á´Ø„ÄÇ"
    elif [ -e "${TMOE_LINUX_DIR}/${DEPENDENCY_01}-version" ]; then
        echo "Êú¨Âú∞ÁâàÊú¨ÂèØËÉΩ‰∏∫$(cat ${TMOE_LINUX_DIR}/${DEPENDENCY_01}-version | head -n 1)"
        echo "Â¶ÇÈúÄ${RED}Âç∏ËΩΩ${RESET}ÔºåËØ∑ÊâãÂä®Ëæì${BLUE} ${TMOE_REMOVAL_COMMAND} ${DEPENDENCY_01} ${DEPENDENCY_02} ${RESET}"
    else
        echo "Êú™Ê£ÄÊµãÂà∞Êú¨Âú∞ÁâàÊú¨ÔºåÊÇ®ÂèØËÉΩ‰∏çÊòØÈÄöËøátmoe-linux toolÂÆâË£ÖÁöÑ„ÄÇ"
    fi
    do_you_want_to_continue
    #if [ -e "${APPS_LNK_DIR}/qq.desktop" ]; then
    #   press_enter_to_reinstall
    #fi
    cd /tmp
    case "${ARCH_TYPE}" in
    arm64 | amd64)
        case ${LINUX_DISTRO} in
        debian)
            aria2c --allow-overwrite=true -k 1M -o LINUXQQ.deb ${THE_LATEST_DEB_URL}
            apt show ./LINUXQQ.deb
            apt install -y ./LINUXQQ.deb
            ;;
        *)
            aria2c --allow-overwrite=true -k 1M -o LINUXQQ.sh ${THE_LATEST_SH_URL}
            chmod +x LINUXQQ.sh
            sudo ./LINUXQQ.sh
            #Âç≥‰ΩøÊòØrootÁî®Êà∑‰πüÈúÄË¶ÅÂä†sudo
            ;;
        esac
        ;;
    *) arch_does_not_support ;;
    esac
    echo "${THE_LATEST_DEB_VERSION}" >"${TMOE_LINUX_DIR}/${DEPENDENCY_01}-version"
    rm -fv ./LINUXQQ.deb ./LINUXQQ.sh 2>/dev/null
    beta_features_install_completed
}
###################
install_nds_game_mayomonogatari() {
    DEPENDENCY_01="desmume"
    DEPENDENCY_02="p7zip-full"
    NON_DEBIAN='false'
    beta_features_quick_install
    if [ -e "ÊñØÈöÜ‰∏éÈ©¨ÂÖãË¥ùÂ∞îÁöÑË∞ú‰πãÁâ©ËØ≠/3782.nds" ]; then
        echo "Ê£ÄÊµãÂà∞ÊÇ®Â∑≤‰∏ãËΩΩÊ∏∏ÊàèÊñá‰ª∂ÔºåË∑ØÂæÑ‰∏∫${HOME}/ÊñØÈöÜ‰∏éÈ©¨ÂÖãË¥ùÂ∞îÁöÑË∞ú‰πãÁâ©ËØ≠"
        press_enter_to_reinstall
    fi
    cd ${HOME}
    mkdir -p 'ÊñØÈöÜ‰∏éÈ©¨ÂÖãË¥ùÂ∞îÁöÑË∞ú‰πãÁâ©ËØ≠'
    cd 'ÊñØÈöÜ‰∏éÈ©¨ÂÖãË¥ùÂ∞îÁöÑË∞ú‰πãÁâ©ËØ≠'
    aria2c --allow-overwrite=true -s 5 -x 5 -k 1M -o slymkbr1.zip http://k73dx1.zxclqw.com/slymkbr1.zip
    aria2c --allow-overwrite=true -s 5 -x 5 -k 1M -o mayomonogatari2.zip http://k73dx1.zxclqw.com/mayomonogatari2.zip
    7za x slymkbr1.zip
    7za x mayomonogatari2.zip
    mv -f ÊñØÈöÜ‰∏éÈ©¨ÂÖãË¥ùÂ∞îÁöÑË∞ú‰πãÁâ©ËØ≠k73/* ./
    mv -f Ëø∑‰πãÁâ©ËØ≠/* ./
    rm -f *url *txt
    rm -rf Ëø∑‰πãÁâ©ËØ≠ ÊñØÈöÜ‰∏éÈ©¨ÂÖãË¥ùÂ∞îÁöÑË∞ú‰πãÁâ©ËØ≠k73
    rm -f slymkbr1.zip* mayomonogatari2.zip*

    echo "ÂÆâË£ÖÂÆåÊàêÔºåÊÇ®ÈúÄË¶ÅÊâãÂä®ÊâßË°å${GREEN}/usr/games/desmume${RESER}ÔºåÂπ∂ËøõÂÖ•'${HOME}/ÊñØÈöÜ‰∏éÈ©¨ÂÖãË¥ùÂ∞îÁöÑË∞ú‰πãÁâ©ËØ≠'ÁõÆÂΩïÂä†ËΩΩÊ∏∏Êàè"
    echo "Â¶ÇÈúÄÂç∏ËΩΩ,ÂàôËØ∑ÊâãÂä®Ëæì${TMOE_REMOVAL_COMMAND} desmume ; rm -rf ~/ÊñØÈöÜ‰∏éÈ©¨ÂÖãË¥ùÂ∞îÁöÑË∞ú‰πãÁâ©ËØ≠"
    echo 'Press enter to start the nds emulator.'
    echo "${YELLOW}ÊåâÂõûËΩ¶ÈîÆÂêØÂä®Ê∏∏Êàè„ÄÇ${RESET}"
    do_you_want_to_continue
    /usr/games/desmume "${HOME}/ÊñØÈöÜ‰∏éÈ©¨ÂÖãË¥ùÂ∞îÁöÑË∞ú‰πãÁâ©ËØ≠/3782.nds" 2>/dev/null &
}
##################
install_game_cataclysm() {
    DEPENDENCY_01="cataclysm-dda-curses"
    DEPENDENCY_02="cataclysm-dda-sdl"
    NON_DEBIAN='false'
    beta_features_quick_install
    echo "Âú®ÁªàÁ´ØÁéØÂ¢É‰∏ãÔºåÊÇ®ÈúÄË¶ÅÁº©Â∞èÊòæÁ§∫ÊØî‰æãÔºåÂπ∂ËæìÂÖ•cataclysmÊù•ÂêØÂä®Â≠óÁ¨¶ÁâàÊ∏∏Êàè„ÄÇ"
    echo "Âú®gui‰∏ãÔºåÊÇ®ÈúÄË¶ÅËæìcataclysm-tilesÊù•ÂêØÂä®ÁîªÈù¢Êõ¥‰∏∫Âçé‰∏ΩÁöÑÂõæÂΩ¢ÁïåÈù¢ÁâàÊ∏∏Êàè„ÄÇ"
    echo "Press ${GREEN}enter${RESET} to ${BLUE}return.${RESET}"
    echo "${YELLOW}ÊåâÂõûËΩ¶ÈîÆÂêØÂä®„ÄÇ${RESET}"
    read
    cataclysm
}
##############################################################
install_package_manager_gui() {
    if [ "${LINUX_DISTRO}" = "debian" ]; then
        install_synaptic
    elif [ "${LINUX_DISTRO}" = "arch" ]; then
        echo "Ê£ÄÊµãÂà∞ÊÇ®‰ΩøÁî®ÁöÑÊòØarchÁ≥ªÂèëË°åÁâàÔºåÂ∞Ü‰∏∫ÊÇ®ÂÆâË£Öpamac"
        install_pamac_gtk
    else
        echo "Ê£ÄÊµãÂà∞ÊÇ®‰ΩøÁî®ÁöÑ‰∏çÊòØdebÁ≥ªÂèëË°åÁâàÔºåÂ∞Ü‰∏∫ÊÇ®ÂÆâË£Ögnome_software"
        install_gnome_software
    fi
}
######################
install_gimp() {
    DEPENDENCY_01="gimp"
    DEPENDENCY_02=""
    NON_DEBIAN='false'
    beta_features_quick_install
}
##############
install_parole() {
    DEPENDENCY_01="parole"
    DEPENDENCY_02=""
    NON_DEBIAN='false'
    beta_features_quick_install
}
###############
install_pamac_gtk() {
    DEPENDENCY_01="pamac"
    DEPENDENCY_02=""
    NON_DEBIAN='false'
    beta_features_quick_install
}
#####################
install_synaptic() {
    if (whiptail --title "ÊÇ®ÊÉ≥Ë¶ÅÂØπËøô‰∏™Â∞èÂèØÁà±ÂÅö‰ªÄ‰πàÂë¢ " --yes-button "InstallÂÆâË£Ö" --no-button "RemoveÁßªÈô§" --yesno "Êñ∞Á´ãÂæ∑ÊòØ‰∏ÄÊ¨æ‰ΩøÁî®aptÁöÑÂõæÂΩ¢ÂåñËΩØ‰ª∂ÂåÖÁÆ°ÁêÜÂ∑•ÂÖ∑ÔºåÊÇ®‰πüÂèØ‰ª•ÊääÂÆÉÁêÜËß£‰∏∫ËΩØ‰ª∂ÂïÜÂ∫ó„ÄÇSynaptic is a graphical package management program for apt. It provides the same features as the apt-get command line utility with a GUI front-end based on Gtk+.ÂÆÉÊèê‰æõ‰∏éapt-getÂëΩ‰ª§Ë°åÁõ∏ÂêåÁöÑÂäüËÉΩÔºåÂπ∂Â∏¶ÊúâÂü∫‰∫éGtk+ÁöÑGUIÂâçÁ´Ø„ÄÇÂäüËÉΩÔºö1.ÂÆâË£Ö„ÄÅÂà†Èô§„ÄÅÂçáÁ∫ßÂíåÈôçÁ∫ßÂçï‰∏™ÊàñÂ§ö‰∏™ËΩØ‰ª∂ÂåÖ„ÄÇ 2.ÂçáÁ∫ßÊï¥‰∏™Á≥ªÁªü„ÄÇ 3.ÁÆ°ÁêÜËΩØ‰ª∂Ê∫êÂàóË°®„ÄÇ  4.Ëá™ÂÆö‰πâËøáÊª§Âô®ÈÄâÊã©(ÊêúÁ¥¢)ËΩØ‰ª∂ÂåÖ„ÄÇ 5.ÊåâÂêçÁß∞„ÄÅÁä∂ÊÄÅ„ÄÅÂ§ßÂ∞èÊàñÁâàÊú¨ÂØπËΩØ‰ª∂ÂåÖËøõË°åÊéíÂ∫è„ÄÇ 6.ÊµèËßà‰∏éÊâÄÈÄâËΩØ‰ª∂ÂåÖÁõ∏ÂÖ≥ÁöÑÊâÄÊúâÂèØÁî®Âú®Á∫øÊñáÊ°£„ÄÇ‚ô™(^‚àá^*) " 19 50); then
        DEPENDENCY_01="synaptic"
        DEPENDENCY_02="gdebi"
        NON_DEBIAN='true'
        beta_features_quick_install
        sed -i 's/synaptic-pkexec/synaptic/g' ${APPS_LNK_DIR}/synaptic.desktop
        echo "synapticÂíågdebiÂÆâË£ÖÂÆåÊàêÔºåÊÇ®ÂèØ‰ª•Â∞ÜdebÊñá‰ª∂ÁöÑÈªòËÆ§ÊâìÂºÄÁ®ãÂ∫è‰øÆÊîπ‰∏∫gdebi"
    else
        echo "${YELLOW}ÊÇ®ÁúüÁöÑË¶ÅÁ¶ªÂºÄÊàë‰πàÔºüÂì¶Âëú„ÄÇ„ÄÇ„ÄÇ${RESET}"
        echo "Do you really want to remove synaptic?"
        RETURN_TO_WHERE='software_center'
        do_you_want_to_continue
        ${TMOE_REMOVAL_COMMAND} synaptic
        ${TMOE_REMOVAL_COMMAND} gdebi
    fi
}
##########################################
install_chinese_manpages() {
    echo 'Âç≥Â∞Ü‰∏∫ÊÇ®ÂÆâË£Ö debian-reference-zh-cn„ÄÅmanpages„ÄÅmanpages-zhÂíåman-db'

    if [ "${LINUX_DISTRO}" = "debian" ]; then
        DEPENDENCY_01="manpages manpages-zh man-db"

    elif [ "${LINUX_DISTRO}" = "arch" ]; then
        DEPENDENCY_01="man-pages-zh_cn"

    elif [ "${LINUX_DISTRO}" = "redhat" ]; then
        DEPENDENCY_01="man-pages-zh-CN"
    else
        DEPENDENCY_01="man-pages-zh-CN"
    fi
    DEPENDENCY_02="debian-reference-zh-cn"
    NON_DEBIAN='false'
    beta_features_quick_install
    if [ ! -e "${HOME}/ÊñáÊ°£/debian-handbook/usr/share/doc/debian-handbook/html" ]; then
        mkdir -p ${HOME}/ÊñáÊ°£/debian-handbook
        cd ${HOME}/ÊñáÊ°£/debian-handbook
        GREP_NAME='debian-handbook'
        LATEST_DEB_REPO='https://mirrors.tuna.tsinghua.edu.cn/debian/pool/main/d/debian-handbook/'
        download_tuna_repo_deb_file_all_arch
        #aria2c --allow-overwrite=true -s 5 -x 5 -k 1M -o 'debian-handbook.deb' 'https://mirrors.tuna.tsinghua.edu.cn/debian/pool/main/d/debian-handbook/debian-handbook_8.20180830_all.deb'
        THE_LATEST_DEB_FILE='kali-undercover.deb'
        if [ "${BUSYBOX_AR}" = 'true' ]; then
            busybox ar xv ${LATEST_DEB_VERSION}
        else
            ar xv ${LATEST_DEB_VERSION}
        fi
        tar -Jxvf data.tar.xz ./usr/share/doc/debian-handbook/html
        ls | grep -v usr | xargs rm -rf
        ln -sf ./usr/share/doc/debian-handbook/html/zh-CN/index.html ./
    fi
    echo "man‰∏ÄÊ¨æÂ∏ÆÂä©ÊâãÂÜåËΩØ‰ª∂ÔºåÂÆÉÂèØ‰ª•Â∏ÆÂä©ÊÇ®‰∫ÜËß£ÂÖ≥‰∫éÂëΩ‰ª§ÁöÑËØ¶ÁªÜÁî®Ê≥ï„ÄÇ"
    echo "man a help manual software, which can help you understand the detailed usage of the command."
    echo "ÊÇ®ÂèØ‰ª•Ëæì${YELLOW}man ËΩØ‰ª∂ÊàñÂëΩ‰ª§ÂêçÁß∞${RESET}Êù•Ëé∑ÂèñÂ∏ÆÂä©‰ø°ÊÅØÔºå‰æãÂ¶Ç${YELLOW}man bash${RESET}Êàñ${YELLOW}man zsh${RESET}"
}
#####################
install_wps_office() {
    random_neko
    DEPENDENCY_01="wps-office"
    DEPENDENCY_02=""
    NON_DEBIAN='false'
    echo "Ê≠£Âú®Ê£ÄÊµãÁâàÊú¨Êõ¥Êñ∞..."
    echo "Ëã•ÂÆâË£ÖÂ§±Ë¥•ÔºåÂàôËØ∑ÂâçÂæÄÂÆòÁΩëÊâãÂä®‰∏ãËΩΩÂÆâË£Ö„ÄÇ"
    echo "url: ${YELLOW}https://linux.wps.cn${RESET}"
    THE_LATEST_DEB_URL=$(curl -L https://linux.wps.cn/ | grep '\.deb' | grep -i "${ARCH_TYPE}" | head -n 1 | cut -d '=' -f 2 | cut -d '"' -f 2)
    THE_LATEST_DEB_VERSION=$(echo $THE_LATEST_DEB_URL | awk -F '/' '{print $NF}' | sed 's@.deb@@')
    TMOE_TIPS_01="Ê£ÄÊµãÂà∞ÊúÄÊñ∞ÁâàÊú¨‰∏∫${THE_LATEST_DEB_VERSION}"
    lolcat_tmoe_tips_01
    echo "ÊúÄÊñ∞ÁâàÈìæÊé•‰∏∫${BLUE}${THE_LATEST_DEB_URL}${RESET}"
    if [ ! -e "${APPS_LNK_DIR}/wps-office-wps.desktop" ]; then
        #press_enter_to_reinstall
        echo "Êú™Ê£ÄÊµãÂà∞Êú¨Âú∞ÁâàÊú¨ÔºåÊÇ®ÂèØËÉΩÂ∞öÊú™ÂÆâË£ÖWPSÂÆ¢Êà∑Á´Ø„ÄÇ"
    elif [ -e "${TMOE_LINUX_DIR}/${DEPENDENCY_01}-version" ]; then
        echo "Êú¨Âú∞ÁâàÊú¨ÂèØËÉΩ‰∏∫$(cat ${TMOE_LINUX_DIR}/${DEPENDENCY_01}-version | head -n 1)"
        echo "Â¶ÇÈúÄ${RED}Âç∏ËΩΩ${RESET}ÔºåËØ∑ÊâãÂä®Ëæì${BLUE} ${TMOE_REMOVAL_COMMAND} ${DEPENDENCY_01} ${DEPENDENCY_02} ${RESET}"
    else
        echo "Êú™Ê£ÄÊµãÂà∞Êú¨Âú∞ÁâàÊú¨ÔºåÊÇ®ÂèØËÉΩ‰∏çÊòØÈÄöËøátmoe-linux toolÂÆâË£ÖÁöÑ„ÄÇ"
    fi
    do_you_want_to_continue
    cd /tmp
    if [ "${LINUX_DISTRO}" = "debian" ]; then
        dpkg --configure -a
        #LatestWPSLink=$(curl -L https://linux.wps.cn/ | grep '\.deb' | grep -i "${ARCH_TYPE}" | head -n 1 | cut -d '=' -f 2 | cut -d '"' -f 2)
        aria2c --allow-overwrite=true -s 5 -x 5 -k 1M -o WPSoffice.deb "${THE_LATEST_DEB_URL}"
        apt show ./WPSoffice.deb
        apt install -y ./WPSoffice.deb

    elif [ "${LINUX_DISTRO}" = "arch" ]; then
        DEPENDENCY_01="wps-office-cn"
        beta_features_quick_install
    elif [ "${LINUX_DISTRO}" = "redhat" ]; then
        LatestWPSLink=$(curl -L https://linux.wps.cn/ | grep '\.rpm' | grep -i "$(uname -m)" | head -n 1 | cut -d '=' -f 2 | cut -d '"' -f 2)
        aria2c --allow-overwrite=true -s 5 -x 5 -k 1M -o WPSoffice.rpm "https://wdl1.cache.wps.cn/wps/download/ep/Linux2019/9505/wps-office-11.1.0.9505-1.x86_64.rpm"
        rpm -ivh ./WPSoffice.rpm
    fi
    echo ${THE_LATEST_DEB_VERSION} >${TMOE_LINUX_DIR}/${DEPENDENCY_01}-version
    rm -fv ./WPSoffice.deb ./WPSoffice.rpm 2>/dev/null
    beta_features_install_completed
}
###################
install_libre_office() {
    #ps -e >/dev/null || echo "/procÂàÜÂå∫Êú™ÊåÇËΩΩÔºåËØ∑ÂãøÂÆâË£Ölibreoffice,Ëµã‰∫àprootÂÆπÂô®ÁúüÂÆûrootÊùÉÈôêÂèØËß£ÂÜ≥Áõ∏ÂÖ≥ÈóÆÈ¢òÔºå‰ΩÜÂº∫ÁÉà‰∏çÊé®ËçêÔºÅ"
    case ${TMOE_PROOT} in
    no)
        echo "${RED}WARNINGÔºÅ${RESET}Ê£ÄÊµãÂà∞ÊÇ®Êó†ÊùÉËØªÂèñ${GREEN}/proc${RESET}ÁöÑÊüê‰∫õÊï∞ÊçÆÔºÅ"
        echo "Êú¨Â∑•ÂÖ∑Â∞Ü‰∏∫Ê≠§ËΩØ‰ª∂Ëá™Âä®ÊâìË°•‰∏Å‰ª•Ëß£ÂÜ≥Êó†Ê≥ïËøêË°åÁöÑÈóÆÈ¢òÔºå‰ΩÜÊó†Ê≥ï‰øùËØÅË°•‰∏ÅÊúâÊïà„ÄÇ"
        ;;
    esac
    #RETURN_TO_WHERE='software_center'
    #do_you_want_to_continue
    if [ "${LINUX_DISTRO}" = "debian" ]; then
        DEPENDENCY_01='--no-install-recommends libreoffice'
    else
        DEPENDENCY_01="libreoffice"
    fi
    DEPENDENCY_02="libreoffice-l10n-zh-cn libreoffice-gtk3"
    NON_DEBIAN='false'
    beta_features_quick_install
    case "${TMOE_PROOT}" in
    no)
        patch_libreoffice
        echo "ÊâìË°•‰∏ÅÂÆåÊàê"
        ;;
    esac
}
###################
patch_libreoffice() {
    mkdir -p /prod/version
    cd /usr/lib/libreoffice/program
    rm -f oosplash
    curl -Lo 'oosplash' https://gitee.com/mo2/patch/raw/libreoffice/oosplash
    chmod +x oosplash
}
##################
check_libreoffice_patch() {
    if [ $(command -v libreoffice) ]; then
        patch_libreoffice
    fi
}
############
lolcat_tmoe_tips_01() {
    if [ -e /usr/games/lolcat ]; then
        echo ${TMOE_TIPS_01} | /usr/games/lolcat -a -d 9
    elif [ "$(command -v lolcat)" ]; then
        echo ${TMOE_TIPS_01} | lolcat -a -d 9
    else
        echo ${TMOE_TIPS_01}
    fi
    case ${LINUX_DISTRO} in
    debian) ;;
    arch) echo "Ê£ÄÊµãÂà∞ÊÇ®‰ΩøÁî®ÁöÑÊòØarchÁ≥ªÂèëË°åÁâàÔºåÂ∞ÜÈÄöËøáAURÊù•ÂÆâË£ÖËΩØ‰ª∂ÂåÖ" ;;
    redhat) echo "Ê£ÄÊµãÂà∞ÊÇ®‰ΩøÁî®ÁöÑÊòØÁ∫¢Â∏ΩÁ≥ªÂèëË°åÁâàÔºåÂ∞Ü‰∏∫ÊÇ®‰∏ãËΩΩrpmËΩØ‰ª∂ÂåÖ" ;;
    esac
}
#########
install_baidu_netdisk() {
    DEPENDENCY_01="baidunetdisk"
    DEPENDENCY_02=""
    ICON_FILE_01="/usr/share/icons/hicolor/128x128/apps/${DEPENDENCY_01}.png"
    #ICON_FILE_02='/usr/share/icons/hicolor/scalable/apps/${DEPENDENCY_01}.svg'
    ICON_FILE_02="${TMOE_ICON_DIR}/${DEPENDENCY_01}.png"
    #ICON_FILE="/usr/local/etc/tmoe-linux/icons/baidunetdisk.png"
    ICON_FILE="${ICON_FILE_02}"
    if [ -e "${ICON_FILE_01}" ]; then
        ICON_FILE="${ICON_FILE_01}"
    elif [ -e "${ICON_FILE_02}" ]; then
        echo ''
    else
        mkdir -p ${TMOE_ICON_DIR}
        aria2c --allow-overwrite=true -d ${TMOE_ICON_DIR} -o ${DEPENDENCY_01}.png "https://gitee.com/ak2/icons/raw/master/${DEPENDENCY_01}.png"
    fi

    cat_icon_img

    echo "Ëã•ÂÆâË£ÖÂ§±Ë¥•ÔºåÂàôËØ∑ÂâçÂæÄÂÆòÁΩëÊâãÂä®‰∏ãËΩΩÂÆâË£Ö"
    echo "urlÔºö${YELLOW}https://pan.baidu.com/download${RESET}"
    echo "Ê≠£Âú®Ê£ÄÊµãÁâàÊú¨Êõ¥Êñ∞..."
    THE_LATEST_DEB_URL=$(curl -L 'https://aur.tuna.tsinghua.edu.cn/packages/baidunetdisk-bin/?O=10&PP=10' | grep '.deb' | head -n 1 | cut -d '=' -f 2 | cut -d '"' -f 2)
    THE_LATEST_DEB_VERSION=$(echo $THE_LATEST_DEB_URL | awk -F '/' '{print $NF}' | sed 's@.deb@@')
    THE_LATEST_RPM_URL=$(echo ${THE_LATEST_DEB_URL} | awk -F '/' '{print $NF}' | sed 's@_amd64.deb@.x86_64.rpm@')
    TMOE_TIPS_01="Ê£ÄÊµãÂà∞ÊúÄÊñ∞ÁâàÊú¨‰∏∫${THE_LATEST_DEB_VERSION}"
    lolcat_tmoe_tips_01
    echo "ÊúÄÊñ∞ÁâàÈìæÊé•‰∏∫${YELLOW}${THE_LATEST_DEB_URL}${RESET}"
    if [ ! -e "${APPS_LNK_DIR}/baidunetdisk.desktop" ]; then
        echo "Êú™Ê£ÄÊµãÂà∞Êú¨Âú∞ÁâàÊú¨ÔºåÊÇ®ÂèØËÉΩÂ∞öÊú™ÂÆâË£ÖÁôæÂ∫¶ÁΩëÁõòÂÆ¢Êà∑Á´Ø„ÄÇ"
    elif [ -e "${TMOE_LINUX_DIR}/${DEPENDENCY_01}-version" ]; then
        echo "Êú¨Âú∞ÁâàÊú¨ÂèØËÉΩ‰∏∫$(cat ${TMOE_LINUX_DIR}/${DEPENDENCY_01}-version | head -n 1)"
        echo "Â¶ÇÈúÄ${RED}Âç∏ËΩΩ${RESET}ÔºåËØ∑ÊâãÂä®Ëæì${BLUE} ${TMOE_REMOVAL_COMMAND} ${DEPENDENCY_01} ${DEPENDENCY_02} ${RESET}"
    else
        echo "Êú™Ê£ÄÊµãÂà∞Êú¨Âú∞ÁâàÊú¨ÔºåÊÇ®ÂèØËÉΩ‰∏çÊòØÈÄöËøátmoe-linux toolÂÆâË£ÖÁöÑ„ÄÇ"
    fi
    if [ "${ARCH_TYPE}" != "amd64" ]; then
        arch_does_not_support
    fi

    #if [ -e "${APPS_LNK_DIR}/baidunetdisk.desktop" ]; then
    #    press_enter_to_reinstall
    #fi
    do_you_want_to_continue
    cd /tmp
    if [ "${LINUX_DISTRO}" = "arch" ]; then
        DEPENDENCY_01="baidunetdisk-bin"
        beta_features_quick_install
    elif [ "${LINUX_DISTRO}" = "redhat" ]; then
        aria2c --allow-overwrite=true -s 5 -x 5 -k 1M -o 'baidunetdisk.rpm' "${THE_LATEST_RPM_URL}"
        rpm -ivh 'baidunetdisk.rpm'
    elif [ "${LINUX_DISTRO}" = "debian" ]; then
        #GREP_NAME='baidunetdisk'
        #LATEST_DEB_REPO='http://archive.ubuntukylin.com/software/pool/'
        #download_ubuntu_kylin_deb_file_model_02
        aria2c --allow-overwrite=true -s 5 -x 5 -k 1M -o baidunetdisk.deb "${THE_LATEST_DEB_URL}"
        #apt show ./baidunetdisk.deb
        #apt install -y ./baidunetdisk.deb
    fi
    echo "${THE_LATEST_DEB_VERSION}" >"${TMOE_LINUX_DIR}/${DEPENDENCY_01}-version"
    #rm -fv ./baidunetdisk.deb
    beta_features_install_completed
}
######################
install_netease_163_cloud_music() {
    #ICON_FILE_02='/usr/share/icons/hicolor/scalable/apps/netease-cloud-music.svg'
    ICON_FILE="${TMOE_ICON_DIR}/netease-cloud-music.jpg"
    if [ ! -e "${ICON_FILE}" ]; then
        mkdir -p ${TMOE_ICON_DIR}
        aria2c --allow-overwrite=true -d ${TMOE_ICON_DIR} -o netease-cloud-music.jpg "https://gitee.com/ak2/icons/raw/master/netease-cloud-music.jpg"
    fi

    cat_icon_img
    DEPENDENCY_01="netease-cloud-music"
    DEPENDENCY_02=""
    echo "Ê≠£Âú®‰ªé‰ºòÈ∫íÈ∫üËΩØ‰ª∂‰ªìÂ∫ìËé∑ÂèñÊúÄÊñ∞ÁöÑÁΩëÊòì‰∫ëÈü≥‰πêÁâàÊú¨Âè∑..."
    echo "Ëã•ÂÆâË£ÖÂ§±Ë¥•ÔºåÂàôËØ∑ÂâçÂæÄÂÆòÁΩëÊâãÂä®‰∏ãËΩΩÂÆâË£Ö„ÄÇ"
    echo "url: ${YELLOW}https://music.163.com/st/download${RESET}"
    LATEST_DEB_REPO='http://archive.ubuntukylin.com/software/pool/'
    THE_LATEST_DEB_VERSION=$(curl -L ${LATEST_DEB_REPO} | grep "${DEPENDENCY_01}" | cut -d '=' -f 5 | cut -d '"' -f 2 | head -n 1)
    TMOE_TIPS_01="Ê£ÄÊµãÂà∞ÊúÄÊñ∞ÁâàÊú¨‰∏∫${THE_LATEST_DEB_VERSION}"
    lolcat_tmoe_tips_01
    if [ ! -e "${APPS_LNK_DIR}/netease-cloud-music.desktop" ]; then
        #press_enter_to_reinstall
        echo "Êú™Ê£ÄÊµãÂà∞Êú¨Âú∞ÁâàÊú¨ÔºåÊÇ®ÂèØËÉΩÂ∞öÊú™ÂÆâË£ÖÁΩëÊòì‰∫ëÈü≥‰πêÂÆòÊñπÁâàÂÆ¢Êà∑Á´Ø"
    elif [ -e "${TMOE_LINUX_DIR}/${DEPENDENCY_01}-version" ]; then
        echo "Ê£ÄÊµãÂà∞Êú¨Âú∞ÁâàÊú¨‰∏∫$(cat ${TMOE_LINUX_DIR}/${DEPENDENCY_01}-version | head -n 1)"
        echo "Â¶ÇÈúÄ${RED}Âç∏ËΩΩ${RESET}ÔºåËØ∑ÊâãÂä®Ëæì${BLUE} ${TMOE_REMOVAL_COMMAND} ${DEPENDENCY_01} ${DEPENDENCY_02} ${RESET}"
    fi
    case "${ARCH_TYPE}" in
    amd64 | i386) ;;
    *) arch_does_not_support ;;
    esac
    do_you_want_to_continue
    cd /tmp
    if [ "${LINUX_DISTRO}" = "arch" ]; then
        DEPENDENCY_01="netease-cloud-music"
        beta_features_quick_install
    elif [ "${LINUX_DISTRO}" = "redhat" ]; then
        curl -Lv https://dl.senorsen.com/pub/package/linux/add_repo.sh | sh -
        dnf install http://dl-http.senorsen.com/pub/package/linux/rpm/senorsen-repo-0.0.1-1.noarch.rpm
        dnf install -y netease-cloud-music
        #https://github.com/ZetaoYang/netease-cloud-music-appimage/releases
        #appimageÊ†ºÂºè
    else
        non_debian_function
        GREP_NAME='netease-cloud-music'
        case $(date +%Y%m) in
        202008)
            echo "‰ºòÈ∫íÈ∫üËΩØ‰ª∂‰ªìÂ∫ì‰∫é2020Âπ¥8Êúà‰ªΩ‰∏≠‰∏ãÊó¨ËøõË°åÁª¥Êä§ÔºåÊÇ®ÂèØËÉΩÊó†Ê≥ïÊ≠£Â∏∏‰∏ãËΩΩ"
            do_you_want_to_continue
            ;;
        esac
        if [ "${ARCH_TYPE}" = "amd64" ]; then
            LATEST_DEB_REPO='http://archive.ubuntukylin.com/software/pool/'
            download_ubuntu_kylin_deb_file_model_02
            #aria2c --allow-overwrite=true -s 5 -x 5 -k 1M -o netease-cloud-music.deb "http://d1.music.126.net/dmusic/netease-cloud-music_1.2.1_amd64_ubuntu_20190428.deb"
        else
            LATEST_DEB_REPO='http://mirrors.ustc.edu.cn/debiancn/pool/main/n/netease-cloud-music/'
            download_debian_cn_repo_deb_file_model_01
            #aria2c --allow-overwrite=true -s 5 -x 5 -k 1M -o netease-cloud-music.deb "http://mirrors.ustc.edu.cn/debiancn/pool/main/n/netease-cloud-music/netease-cloud-music_1.0.0%2Brepack.debiancn-1_i386.deb"
        fi
        beta_features_install_completed
    fi
    echo "${THE_LATEST_DEB_VERSION}" >"${TMOE_LINUX_DIR}/${DEPENDENCY_01}-version"
    press_enter_to_return
    tmoe_linux_tool_menu
}
############################
install_android_debug_bridge() {
    if [ ! $(command -v adb) ]; then
        if [ "${LINUX_DISTRO}" = "debian" ]; then
            DEPENDENCY_01="adb"
        else
            DEPENDENCY_01="android-tools"
        fi
    fi
    DEPENDENCY_02=""
    NON_DEBIAN='false'
    beta_features_quick_install
    adb --help
    echo "Ê≠£Âú®ÈáçÂêØËøõÁ®ã,ÊÇ®‰πüÂèØ‰ª•ÊâãÂä®Ëæìadb devicesÊù•Ëé∑ÂèñËÆæÂ§áÂàóË°®"
    adb kill-server
    adb devices -l
    echo "Âç≥Â∞Ü‰∏∫ÊÇ®Ëá™Âä®ËøõÂÖ•adb shellÊ®°ÂºèÔºåÊÇ®‰πüÂèØ‰ª•ÊâãÂä®Ëæìadb shellÊù•ËøõÂÖ•ËØ•Ê®°Âºè"
    adb shell
}
####################
install_bleachbit_cleaner() {
    DEPENDENCY_01="bleachbit"
    DEPENDENCY_02=""
    NON_DEBIAN='false'
    beta_features_quick_install
}
##########################
personal_netdisk() {
    WHICH_NETDISK=$(whiptail --title "FILE SHARE SERVER" --menu "‰Ω†ÊÉ≥Ë¶Å‰ΩøÁî®Âì™‰∏™ËΩØ‰ª∂Êù•ÂÖ±‰∫´Êñá‰ª∂Âë¢" 0 50 0 \
        "1" "Filebrowser:ÁÆÄÂçïËΩªÈáèÁöÑ‰∏™‰∫∫ÁΩëÁõò" \
        "2" "Nginx WebDAV:ÊØîftpÊõ¥ÈÄÇÂêàÁî®‰∫é‰º†ËæìÊµÅÂ™í‰Ωì" \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##############################
    case "${WHICH_NETDISK}" in
    0 | "") software_center ;;
    1) install_filebrowser ;;
    2) install_nginx_webdav ;;
    esac
    ##################
    press_enter_to_return
    personal_netdisk
}
################################
tmoe_other_options_menu() {
    RETURN_TO_WHERE='tmoe_other_options_menu'
    NON_DEBIAN='false'
    TMOE_APP=$(whiptail --title "ÂÖ∂ÂÆÉÈÄâÈ°π" --menu \
        "Welcome to tmoe-linux tool.ËøôÈáåÊòØÂÖ∂ÂÆÉÈÄâÈ°πÁöÑËèúÂçï." 0 50 0 \
        "1" "Remove GUI Âç∏ËΩΩÂõæÂΩ¢ÁïåÈù¢" \
        "2" "Remove browser Âç∏ËΩΩÊµèËßàÂô®" \
        "3" "Remove tmoe-linux tool" \
        "0" "üåö Return to previous menu ËøîÂõû‰∏äÁ∫ßËèúÂçï" \
        3>&1 1>&2 2>&3)
    ##########################
    case "${TMOE_APP}" in
    0 | "") software_center ;;
    1) remove_gui ;;
    2) remove_browser ;;
    3) remove_tmoe_linux_tool ;;
    esac
    ##########################
    press_enter_to_return
    tmoe_other_options_menu
}
############################
remove_gui() {
    DEPENDENCY_01="xfce lxde mate lxqt cinnamon gnome dde deepin-desktop kde-plasma"
    echo '"xfce" "ÂëúÂëúÔºå(‚âßÔπè ‚â¶)ÊÇ®ÁúüÁöÑË¶ÅÁ¶ªÂºÄÊàë‰πà"  '
    echo '"lxde" "ÂæàÂ∫ÜÂπ∏ËÉΩ‰∏éÈòÅ‰∏ãÁõ∏ÈÅáÔºàÔºõ¬¥–¥ÔΩÄÔºâ„Çû "  '
    echo '"mate" "Âñî...ÂñîÂëú...Êàë‰∏çËàçÂæó‰Ω†Ëµ∞/(„Ñío„Ñí)/~~"  '
    #Êñ∞ÂäüËÉΩÈ¢ÑÂëäÔºöÂç≥Â∞ÜÈÄÇÈÖçÈùûdebÁ≥ªlinuxÁöÑguiÂç∏ËΩΩÂäüËÉΩ
    echo "${YELLOW}ÊåâÂõûËΩ¶ÈîÆÁ°ÆËÆ§Âç∏ËΩΩ${RESET}"
    echo 'Press enter to remove,press Ctrl + C to cancel'
    RETURN_TO_WHERE='tmoe_linux_tool_menu'
    do_you_want_to_continue
    if [ "${LINUX_DISTRO}" = "debian" ]; then
        apt purge -y xfce4 xfce4-terminal tightvncserver xfce4-goodies
        apt purge -y dbus-x11
        apt purge -y ^xfce
        #apt purge -y xcursor-themes
        apt purge -y lxde-core lxterminal
        apt purge -y ^lxde
        apt purge -y mate-desktop-environment-core mate-terminal || aptitude purge -y mate-desktop-environment-core 2>/dev/null
        umount .gvfs
        apt purge -y ^gvfs ^udisks
        apt purge -y ^mate
        apt purge -y -y kde-plasma-desktop
        apt purge -y ^kde-plasma
        apt purge -y ^gnome
        apt purge -y ^cinnamon
        apt purge -y dde
        apt autopurge || apt autoremove
    elif [ "${LINUX_DISTRO}" = "arch" ]; then
        pacman -Rsc xfce4 xfce4-goodies
        pacman -Rsc mate mate-extra
        pacman -Rsc lxde lxqt
        pacman -Rsc plasma-desktop
        pacman -Rsc gnome gnome-extra
        pacman -Rsc cinnamon
        pacman -Rsc deepin deepin-extra
    elif [ "${LINUX_DISTRO}" = "redhat" ]; then
        dnf groupremove -y xfce
        dnf groupremove -y mate-desktop
        dnf groupremove -y lxde-desktop
        dnf groupremove -y lxqt
        dnf groupremove -y "KDE" "GNOME" "Cinnamon Desktop"
        dnf remove -y deepin-desktop
    else
        ${TMOE_REMOVAL_COMMAND} ${DEPENDENCY_01} ${DEPENDENCY_02}
    fi
}
##########################
remove_tmoe_linux_tool() {
    cd /usr/local/bin
    echo "${RED}rm -rv ${APPS_LNK_DIR}/tmoe-linux.desktop ${HOME}/.config/tmoe-linux startvnc stopvnc debian-i startx11vnc startxsdl x11vncpasswd .tmoe-linux-qemu startqemu ${TMOE_GIT_DIR}${RESET}"
    DEPENDENCIES='git aria2 pv wget curl less xz-utils newt whiptail'
    echo "${RED}${TMOE_REMOVAL_COMMAND} ${DEPENDENCIES}${RESET}"
    echo "${RED}WARNINGÔºÅ${RESET}Âà†Èô§${HOME}/.config/tmoe-linuxÊñá‰ª∂Â§πÂ∞ÜÂØºËá¥chrootÂÆπÂô®Êó†Ê≥ïÊ≠£Â∏∏ÁßªÈô§ÔºåÂª∫ËÆÆÊÇ®Âú®ÁßªÈô§ÂÆåÂÆπÂô®ÂêéÂÜçÊù•Âà†Èô§ÈÖçÁΩÆÊñá‰ª∂ÁõÆÂΩï„ÄÇ"
    do_you_want_to_continue
    rm -rv ${APPS_LNK_DIR}/tmoe-linux.desktop startvnc stopvnc debian-i startx11vnc ${TMOE_GIT_DIR} startxsdl x11vncpasswd
    ${TMOE_REMOVAL_COMMAND} ${DEPENDENCIES}
    exit 1
}
############################
software_center
